@using System.Globalization;
@using Squidlr.Instagram;
@using Squidlr.Shared;
@using Squidlr.Twitter;

@inject NavigationManager NavigationManager

@if (Content is not null)
{
    var title = SeoProperties.CreatePageTitle($"{Content.FullName} on Instagram: " + FormatHelper.FormatContentTitle(Content.FullText));
    string? displayUrl = null;

    <PageTitle>@title</PageTitle>
    <HeadContent>
        <meta name="og:title" content="@title" />
        <meta name="og:description" content="@SeoProperties.Description" />
        <meta name="og:type" content="video.other" />
        <meta name="og:site_name" content="squidlr.com" />
        <meta name="og:url" content="@(NavigationManager.Uri)" />
        @if (displayUrl != null)
        {
            <meta name="og:image" content="@displayUrl" />
        }
        <meta name="twitter:creator" content="@@instagram" />
        <meta name="twitter:site" content="@@SquidlrBot" />
        <meta name="twitter:domain" content="squidlr.com">
    </HeadContent>

    <div class="px-4 my-4 text-center">
        <h1 class="display-6 fw-bold text-body-emphasis">Instagram video download</h1>
    </div>

    <div class="card mb-4">
        <div class="card-body pb-0">
            <p class="card-text">
                @if (Content.FullText != null)
                {
                    <blockquote class="blockquote">
                        <p class="content-text">@((MarkupString)Content.FullText)</p>
                        <a href="@string.Format("https://www.instagram.com/{0}", Content.UserName)" style="text-decoration: none">
                            <footer class="blockquote-footer fw-bold">
                                @string.Format("@{0}", Content.UserName)
                                <p>@Content.FullName</p>
                            </footer>
                        </a>
                    </blockquote>
                }
                <a href="@Content.SourceUrl">
                    <time datetime="@Content.CreatedAtUtc.ToString("O", CultureInfo.InvariantCulture)">
                        @Content.CreatedAtUtc.ToString("f", CultureInfo.InvariantCulture)
                    </time>
                </a>

                <ul class="list-inline mt-1">
                    @if (Content.FavoriteCount > 0)
                    {
                        <li class="list-inline-item"><strong>@FormatHelper.FormatNumber(Content.FavoriteCount)</strong> <small>Likes</small></li>
                    }
                    <li class="list-inline-item"><strong>@FormatHelper.FormatNumber(Content.ReplyCount)</strong> <small>@FormatHelper.ToQuantity(Content.ReplyCount, "Reply")</small></li>
                </ul>
            </p>

            @{
                int videoNumber = 0;
            }
            @foreach (var video in Content.Videos)
            {
                videoNumber++;
                <div class="card border-0 mb-3">
                    <div class="row">
                        <div class="col">
                            <div class="card-body pt-0">
                                <h2 class="card-title">Video #@videoNumber</h2>
                                <div class="card-text">
                                    <ul class="list-inline mt-1">
                                        @if (@video.Duration is not null)
                                        {
                                            <li class="list-inline-item"><strong>@FormatHelper.FormatDuration(video.Duration.Value)</strong></li>
                                        }
                                        @if (@video.Views is not null && video.Views > 0)
                                        {
                                            <li class="list-inline-item"><strong>@FormatHelper.FormatNumber(@video.Views.Value)</strong> <small>Views</small></li>
                                        }
                                    </ul>
                                    <div class="alert alert-primary d-flex align-items-center" role="alert">
                                        <span class="oi oi-info me-2" data-glyph="info" title="Information" aria-hidden="true"></span>
                                        <span class="fw-medium">Right click your selection and choose "Save as..." to save the video on your device.</span>
                                    </div>
                                </div>
                                <div class="list-group">
                                    @{
                                        var videoSources = video.VideoSources.OrderByDescending(vs => vs.Bitrate).ToArray();
                                        int videoSourceIndex = 0;
                                    }
                                    @foreach (var source in videoSources)
                                    {
                                        <a class="btn btn-primary list-group-item list-group-item-action mb-1" role="button" href="@source.Url.ToString()" target="_blank">
                                            <div class="d-flex w-100 justify-content-between">
                                                <h5 class="mb-1">Download</h5>
                                                <span class="oi oi-cloud-download" data-glyph="cloud-download" title="Download" aria-hidden="true"></span>
                                            </div>
                                            <p class="mb-1">
                                                @if (source.Size != VideoSize.Empty)
                                                {
                                                    @string.Format("{0} x {1}", @source.Size.Width, @source.Size.Height)
                                                }
                                                else
                                                {
                                                    @((MarkupString)"Unknown video resolution")
                                                }
                                            </p>
                                            <ul class="list-unstyled mb-0">
                                                @if (source.ContentLength != null)
                                                {
                                                    <li class="list-item"><small>Size: @source.ContentLength.Value.Bytes().Humanize("#.#")</small></li>
                                                }
                                            </ul>
                                        </a>
                                        videoSourceIndex++;
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="alert alert-warning" role="alert">No content has been provided.</div>
}

@code {
    [Parameter]
    public InstagramContent? Content { get; set; }
}
